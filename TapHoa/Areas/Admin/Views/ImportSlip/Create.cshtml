@model TapHoa.Data.Phieunhap

@{
    ViewData["Title"] = "Create New Import Slip";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers

<h2 class="text-center">Create New Import Slip</h2>

<form asp-action="Create" method="post" class="importslip-form">
    <div class="form-group">
        <label asp-for="Manv" class="control-label">Employee</label>
        @Html.DropDownListFor(model => model.Manv, (SelectList)ViewBag.ManvList, "Select an Employee", new { @class = "form-control dropdown-employee" })
        <span asp-validation-for="Manv" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Ngaynhap" class="control-label">Entry Date</label>
        <input asp-for="Ngaynhap" class="form-control" readonly />
    </div>

    <h4 class="mt-4">Product Details</h4>
    <table class="table table-bordered table-striped" id="productTable">
        <thead class="thead-light">
            <tr>
                <th class="col-product">Product</th>
                <th class="col-quantity">Quantity</th>
                <th>Price</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DropDownList("Ctphieunhap[0].Masp", (SelectList)ViewBag.MaspList, "Select a Product", new { @class = "form-control dropdown-product", onchange = "updatePrice(0)" })
                </td>
                <td>
                    <input name="Ctphieunhap[0].Soluong" type="number" class="form-control input-quantity" value="1" min="1" onchange="calculateTotal(0)" />
                </td>
                <td>
                    <input id="Gia0" class="form-control" readonly />
                </td>
                <td>
                    <input id="Tongtien0" class="form-control" readonly />
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
                </td>
            </tr>
        </tbody>
    </table>

    <div class="form-group">
        <label class="control-label">Grand Total:</label>
        <input id="GrandTotal" class="form-control" readonly />
        <input type="hidden" name="Tongtien" id="HiddenGrandTotal" />
    </div>

    <div class="d-flex justify-content-between">
        <button type="button" class="btn btn-primary" onclick="addRow()">Add Product</button>
        <button type="submit" class="btn btn-success">Create</button>
    </div>
    <a asp-action="Index" class="btn btn-secondary mt-2">Cancel</a>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        let rowCount = 1;
        const productPrices = @Html.Raw(Json.Serialize(ViewBag.ProductPrices));

        function updatePrice(rowIndex) {
            const masp = document.querySelector(`#productTable tbody tr:nth-child(${rowIndex + 1}) select`).value;
            const price = productPrices[masp] || 0;
            document.getElementById(`Gia${rowIndex}`).value = price;
            calculateTotal(rowIndex);
            updateGrandTotal();
        }

        function calculateTotal(rowIndex) {
            const gia = parseFloat(document.getElementById(`Gia${rowIndex}`).value) || 0;
            const soluong = parseInt(document.querySelector(`#productTable tbody tr:nth-child(${rowIndex + 1}) input[name="Ctphieunhap[${rowIndex}].Soluong"]`).value) || 0;
            document.getElementById(`Tongtien${rowIndex}`).value = (gia * soluong).toFixed(2);
            updateGrandTotal();
        }

        function addRow() {
            const table = document.getElementById('productTable').getElementsByTagName('tbody')[0];
            const newRow = table.insertRow();
            newRow.innerHTML = `
                        <td>
                            <select name="Ctphieunhap[${rowCount}].Masp" class="form-control dropdown-product" onchange="updatePrice(${rowCount})">
                                <option value="">Select a Product</option>
        @foreach (var item in ViewBag.MaspList)
        {
                                        <option value="@item.Value">@item.Text</option>
        }
                            </select>
                        </td>
                        <td>
                            <input name="Ctphieunhap[${rowCount}].Soluong" type="number" class="form-control input-quantity" value="1" min="1" onchange="calculateTotal(${rowCount})" />
                        </td>
                        <td>
                            <input id="Gia${rowCount}" class="form-control" readonly />
                        </td>
                        <td>
                            <input id="Tongtien${rowCount}" class="form-control" readonly />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
                        </td>`;
            rowCount++;
        }

        function removeRow(button) {
            const row = button.parentElement.parentElement;
            row.parentElement.removeChild(row);
            updateGrandTotal();
        }

        function updateGrandTotal() {
            let grandTotal = 0;
            const totalInputs = document.querySelectorAll('input[id^="Tongtien"]');
            totalInputs.forEach(input => {
                grandTotal += parseFloat(input.value) || 0;
            });
            document.getElementById('GrandTotal').value = grandTotal.toFixed(2);
            document.getElementById('HiddenGrandTotal').value = grandTotal.toFixed(2); // Cập nhật input ẩn
        }
    </script>
}

<style>
    .importslip-form {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        height: 45px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
        transition: border-color 0.3s;
    }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

    .dropdown-employee, .dropdown-product, .input-quantity {
        width: 100%;
    }

    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .table th {
        background-color: #f2f2f2;
    }
</style>
