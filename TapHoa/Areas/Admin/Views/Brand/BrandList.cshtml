@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<TapHoa.Data.Thuonghieu>
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "BrandList";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h3>Brand list</h3>
<form method="get" action="/admin/brand/SearchBrand">
    <div class="form-group">
        <input type="text" name="keyword" class="form-control"
               placeholder="Enter brand name to search..." value="@ViewBag.Keyword" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>
<br />
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

<p>
    <a asp-action="CreateBrand">Create</a>
</p>
<table class="table">
    <thead>
        <tr class="table-warning">
            <th>
                Brand name
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 0;
            string cls = "table-success";
        }
@foreach (var item in Model) {
            cls = "table-success";
            i++;
            if (i % 2 == 0)
            {
                cls = "table-primary";
            }
        <tr class="@cls">
            <td>
                @Html.DisplayFor(modelItem => item.Tenthuonghieu)
            </td>
                <td>
                    <a asp-action="Edit" asp-route-Mathuonghieu="@item.Mathuonghieu" class="btn btn-primary btn-sm">
                        <i class="bi bi-pencil"></i> Edit
                    </a>
                    <a asp-action="Delete" asp-route-Mathuonghieu="@item.Mathuonghieu" class="btn btn-danger btn-sm">
                        <i class="bi bi-trash"></i> Delete
                    </a>
                </td>
        </tr>
}
    </tbody>
</table>
<div class="product__pagination">
    @Html.PagedListPager(Model, page => Url.Action("BrandList", new { page = page }), new X.PagedList.Mvc.Core.PagedListRenderOptions
{
    LiElementClasses = new List<string> { "page-item" },
    PageClasses = new List<string> { "page-link" }
})
</div>
